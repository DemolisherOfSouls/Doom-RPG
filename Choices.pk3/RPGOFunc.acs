#library "RPGOFunc"

#include "zcommon.acs"

#import "RPGConst.acs"
#import "RPGGVars.acs"
#import "RPGIVars.acs"
#import "RPGIList.acs"
#import "RPGOList.acs"
#import "RPGAFunc.acs"
#import "RPGColor.acs"
#import "RPGError.acs"

function int GetKeyMission (int keynum)
{
	if(WithinRange(keynum, KEY_REDCARD, KEY_YELLOWSKULL))
		return keynum;
	
	if(WithinRange(keynum, 129, 131))
		return keynum - 128 + 6;
	
	if(WithinRange(keynum, 132, 134))
		return keynum - 131 + 6;
	
	if(keynum == KEY_ANY)
		return MISSION_ANYKEY;
	
	if(keynum == KEY_EACH)
		return MISSION_EACHKEY;
		
	if(keynum == KEY_ALL)
		return MISSION_ALLKEYS;
	
	return EXCEPTION;
}

function int GetKeyIndex (int mission)
{
	if(WithinRange(mission, MISSION_REDCARD, MISSION_YELLOWSKULL))
		return mission;
	
	if(WithinRange(mission, MISSION_REDKEY, MISSION_YELLOWKEY))
		return 128 - 6 + mission;
	
	if(mission == MISSION_ANYKEY)
		return KEY_ANY;
	
	if(mission == MISSION_EACHKEY)
		return KEY_EACH;
		
	if(mission == MISSION_ALLKEYS)
		return KEY_ALL;
	
	return EXCEPTION;
}

//Returns true if the key mission is not active
function bool CheckKeyMission (int keynum)
{
	if(GetMissionStatus(GetKeyMission(keynum), G_Map, NULL) >= MISSION_GOT || GetMissionStatus(GetKeyDoorMission(keynum), G_Map, NULL) >= MISSION_GOT)
		return false;
	return true;
}

/*
//Returns the keynum of the next needed key
function int CheckAllKeysUsed (void)
{
	for(int k = 0; k < 6; k++)
		if(!LevelKeyUsed[k])
			return k+1;
	
	return NULL; // No key needed, all keys found
}
*/

//Returns the next unused index (0-1023) or EXCEPTION if the list is full
function int GetNextMissionIndex (void)
{
	for(int c = 0; c < 1024; c++)
		if(GetUserArray(0, "user_m_status", c) == MISSION_NONE)
			return c;
	
	return EXCEPTION;
}

//Returns the index (0-1023) or EXCEPTION if the mission is not there
function int LookupMission (int mission, int map, int owner)
{
	for(int m = 0; m < 1024; m++)
	{
		if(GetUserArray(0, "user_m_status", m) == MISSION_NONE)
			break;
		
		if(mission != GetUserArray(0, "user_m_type", m))
			continue;
		if(map != GetUserArray(0, "user_m_map", m))
			continue;
		if(owner != GetUserArray(0, "user_m_owner", m))
			continue;
		
		return m;
	}
	
	return EXCEPTION;
}

function int GetMissionStatus (int MissionIndex)
{
	if(MissionIndex == EXCEPTION)
		return MISSION_NONE;
	
	return GetUserArray(0, "user_m_status", MissionIndex);
}

function void SetMissionStatus (int MissionIndex, int value)
{
	if(MissionIndex == EXCEPTION)
	{
		log(s:"Mission Status was not set. Use AddMission script instead.");
		return;
	}
	
	SetUserArray(0, "user_m_status", MissionIndex, value);
}

