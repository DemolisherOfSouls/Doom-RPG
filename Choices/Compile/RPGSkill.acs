#library "RPGSkill"

#include "zcommon.acs"

#import "RPGConst.acs"
#import "RPGIList.acs"
#import "RPGSList.acs"
#import "RPGWList.acs"
#import "RPGAFunc.acs"
#import "RPGIFunc.acs"
#import "RPGSFunc.acs"
#import "RPGWFunc.acs"

script "AddSkill" (int skill, int amt)
{
	SetRanks(skill, amt);
	ACS_NamedExecuteAlways("SkillAlert", 0, skill, amt);
	
	switch(skill)
	{
	case SKILL_OldSchool:
		IncrementActorProperty(0, APROP_Speed, 0.05 * amt);
		break;
	case SKILL_Gunner:
		IncrementActorProperty(0, APROP_Speed, -0.05 * amt);
		break;
	case SKILL_Heavy:
		IncrementAmmoCapacity(AT_Clip, 120 * amt);
		SetUserArray(0, "user_disableweapon", WT_Rifle, true);
		IncrementUserArray(0, "accuracy", WT_Chaingun, 3 * amt);
		break;
	case SKILL_PackMule:
		IncrementAmmoCapacity(AT_Clip, 60 * amt);
		IncrementAmmoCapacity(AT_Shell, 16 * amt);
		IncrementAmmoCapacity(AT_Rocket, 8 * amt);
		IncrementAmmoCapacity(AT_Cell, 90 * amt);
		break;
	case SKILL_PlasmaSpaz:
		IncrementAmmoCapacity(AT_Cell, 90 * amt);
		break;
	case SKILL_Pyro:
		IncrementAmmoCapacity(AT_Cell, 180 * amt);
		SetUserArray(0, "user_disableweapon", WT_SuperShotgun, true);
		break;
	}
}

script "Skill_BloodyMess" (void)
{
	SetResultValue(GetSkill(SKILL_BloodyMess));
}

script "Skill_HomingRounds" (void)
{
	SetResultValue(GetSkill(SKILL_HomingRounds));
}

script "Skill_QuantumLasers" (void)
{
	SetResultValue(false);
}

script "Skill_QuickDraw" (void)
{
	SetResultValue(GetSkill(SKILL_QuickDraw));
}

script "Skill_Reloader" (int tics)
{
	SetResultValue(Min(tics - tics / 10 * GetSkill(SKILL_Reloader), 1));
}